# Generated by Django 4.2.15 on 2025-02-14 10:09

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        (
            "location",
            "0008_alter_city_globalidlocal_alter_concelho_idconcelho_and_more",
        ),
    ]

    operations = [
        migrations.CreateModel(
            name="WeatherWarning",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("awareness_type", models.CharField(max_length=50)),
                (
                    "awareness_level",
                    models.CharField(
                        choices=[
                            ("green", "No Warning"),
                            ("yellow", "Yellow Warning"),
                            ("orange", "Orange Warning"),
                            ("red", "Red Warning"),
                        ],
                        max_length=6,
                    ),
                ),
                (
                    "area_code",
                    models.CharField(max_length=10, verbose_name="Area Aviso Code"),
                ),
                ("start_time", models.DateTimeField()),
                ("end_time", models.DateTimeField()),
                ("description", models.TextField(blank=True)),
            ],
            options={
                "ordering": ["-start_time"],
            },
        ),
        migrations.CreateModel(
            name="StationObservation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("timestamp", models.DateTimeField()),
                ("temperature", models.FloatField()),
                ("humidity", models.FloatField()),
                ("wind_speed_kmh", models.FloatField()),
                ("wind_speed_ms", models.FloatField()),
                (
                    "wind_direction",
                    models.IntegerField(
                        choices=[
                            (0, "No Direction"),
                            (1, "N"),
                            (2, "NE"),
                            (3, "E"),
                            (4, "SE"),
                            (5, "S"),
                            (6, "SW"),
                            (7, "W"),
                            (8, "NW"),
                            (9, "N"),
                        ]
                    ),
                ),
                ("precipitation", models.FloatField()),
                ("pressure", models.FloatField(null=True)),
                ("radiation", models.FloatField(null=True)),
                (
                    "station",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="observations",
                        to="location.weatherstation",
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
                "unique_together": {("station", "timestamp")},
            },
        ),
        migrations.CreateModel(
            name="HighPrecisionForecast",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "forecast_day",
                    models.IntegerField(
                        choices=[
                            (0, "Today"),
                            (1, "Tomorrow"),
                            (2, "Day After Tomorrow"),
                        ]
                    ),
                ),
                ("forecast_date", models.DateField()),
                ("update_date", models.DateTimeField()),
                ("t_min", models.FloatField()),
                ("t_max", models.FloatField()),
                ("precipita_prob", models.FloatField()),
                (
                    "wind_dir",
                    models.CharField(
                        choices=[
                            ("N", "North"),
                            ("NE", "Northeast"),
                            ("E", "East"),
                            ("SE", "Southeast"),
                            ("S", "South"),
                            ("SW", "Southwest"),
                            ("W", "West"),
                            ("NW", "Northwest"),
                        ],
                        max_length=2,
                    ),
                ),
                ("wind_speed_class", models.IntegerField()),
                ("precip_intensity_class", models.IntegerField()),
                ("weather_type", models.IntegerField()),
                (
                    "city",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="hp_forecasts",
                        to="location.city",
                    ),
                ),
            ],
            options={
                "ordering": ["forecast_day"],
                "unique_together": {("city", "forecast_day")},
            },
        ),
        migrations.CreateModel(
            name="DailyForecast",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("forecast_date", models.DateField()),
                ("update_date", models.DateTimeField()),
                ("t_min", models.FloatField(verbose_name="Minimum Temperature (°C)")),
                ("t_max", models.FloatField(verbose_name="Maximum Temperature (°C)")),
                (
                    "precipita_prob",
                    models.FloatField(verbose_name="Precipitation Probability (%)"),
                ),
                (
                    "wind_dir",
                    models.CharField(
                        choices=[
                            ("N", "North"),
                            ("NE", "Northeast"),
                            ("E", "East"),
                            ("SE", "Southeast"),
                            ("S", "South"),
                            ("SW", "Southwest"),
                            ("W", "West"),
                            ("NW", "Northwest"),
                        ],
                        max_length=2,
                    ),
                ),
                ("wind_speed_class", models.IntegerField()),
                ("weather_type", models.IntegerField()),
                ("latitude", models.FloatField()),
                ("longitude", models.FloatField()),
                (
                    "city",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="forecasts",
                        to="location.city",
                    ),
                ),
            ],
            options={
                "ordering": ["forecast_date"],
                "unique_together": {("city", "forecast_date")},
            },
        ),
    ]
